create schema admin_svg

SET client_encoding = 'LATIN9';
SET check_function_bodies = false;
SET client_min_messages = warning;
//	SET search_path = admin_svg, pg_catalog;
SET default_tablespace = '';
SET default_with_oids = true;

create sequence admin_svg.appli increment by 1 start with 1;
create sequence admin_svg.appth increment by 1 start with 1;
create sequence admin_svg.styl increment by 1 start with 1;
create sequence admin_svg.them increment by 1 start with 1;

CREATE TABLE admin_svg.application (
	idapplication character varying(6) DEFAULT nextval('admin_svg.appli'::text) NOT NULL,
	libelle_appli character varying,
	btn_polygo character varying,
	libelle_btn_polygo character varying,
	divers character varying,
	zoom_ouverture integer,
	zoom_min integer,
	zoom_max integer,
	url character varying);
ALTER TABLE admin_svg.application OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.application ADD CONSTRAINT cleunik PRIMARY KEY (idapplication);
ALTER INDEX admin_svg.cleunik OWNER TO "+pg_utilis+";
	
CREATE TABLE admin_svg.appthe (
	idappthe character varying DEFAULT nextval('admin_svg.appth'::text) NOT NULL,
	idapplication character varying(6),
	idtheme character varying,
	mouseover character varying,
	click character varying,
	mouseout character varying,
	ordre integer,
	sordre integer,
	ordre_couche integer,
	pointer_events character varying,
	raster boolean DEFAULT true,
	zoommin integer,
	zoommax integer,
	zoommaxraster integer,
	objselection boolean DEFAULT false,
	objprincipal boolean DEFAULT false);
ALTER TABLE admin_svg.appthe OWNER TO "+pg_utilis+";
	
CREATE TABLE admin_svg.apputi (
	idapplication character varying(6),
	idutilisateur character varying(10),
	droit character varying,
	btn_polygo character varying,
	libelle_btn_polygo character varying,
	ordre integer);
ALTER TABLE admin_svg.apputi OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.apputi ADD CONSTRAINT fk_appli FOREIGN KEY (idapplication) REFERENCES application(idapplication);
ALTER TABLE ONLY admin_svg.apputi ADD CONSTRAINT fk_util FOREIGN KEY (idutilisateur) REFERENCES utilisateur(idutilisateur);
	
CREATE TABLE admin_svg.col_sel (
	idtheme character varying,
	appel character varying,
	nom_as character varying,
	ordre_sel character varying);
ALTER TABLE admin_svg.col_sel OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.col_sel ADD CONSTRAINT fk_appthe FOREIGN KEY (idtheme) REFERENCES theme(idtheme);
	
CREATE TABLE admin_svg.col_theme (
	idappthe character varying,
	colonn character varying,
	intitule_legende character varying,
	valeur_mini character varying,
	valeur_maxi character varying,
	valeur_texte character varying,
	fill character varying,
	stroke_rgb character varying,
	stroke_width character varying,
	font_familly character varying,
	font_size character varying,
	font_weight character varying,
	symbole character varying,
	id_symbole character varying,
	opacity character varying,
	fill_rule character varying,
	stroke_dasharray character varying,
	stroke_dashoffset character varying,
	ordre integer);
ALTER TABLE admin_svg.col_theme OWNER TO "+pg_utilis+";
	
CREATE TABLEadmin_svg. col_where (
	idtheme character varying,
	clause character varying);
ALTER TABLE admin_svg.col_where OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.col_where ADD CONSTRAINT fk_appthe FOREIGN KEY (idtheme) REFERENCES theme(idtheme);
	
CREATE TABLE admin_svg.commune (
	gid integer,
	source character varying,
	nom character varying,
	idcommune character varying(6),
	statut character varying,
	canton character varying,
	arrond character varying,
	depart character varying,
	region character varying,
	population bigint,
	multi_cant character varying,
	the_geom public.geometry,
	enveloppe public.geometry,
	logo character varying,
	larg_logo character varying,
	xma character varying,
	xmi character varying,
	yma character varying,
	ymi character varying,
	tel_urba character varying,
	horaire_urba character varying,
	plu_pos character varying,
	approb character varying,
	modif character varying,
	idagglo character varying DEFAULT 770000);
ALTER TABLE admin_svg.commune OWNER TO "+pg_utilis+";
CREATE UNIQUE INDEX admin_svg.ndx_commune_insee ON commune USING btree (idcommune);
ALTER INDEX admin_svg.ndx_commune_insee OWNER TO "+pg_utilis+";
	
CREATE TABLE admin_svg.style (
	idstyle character varying DEFAULT nextval('admin_svg.styl'::text) NOT NULL,
	idtheme character varying,
	idutilisateur character varying(10),
	fill character varying,
	stroke_rgb character varying,
	stroke_width character varying,
	font_familly character varying,
	font_size character varying,
	font_weight character varying,
	symbole character varying,
	id_symbole character varying,
	opacity character varying,
	fill_rule character varying,
	stroke_dasharray character varying,
	stroke_dashoffset character varying);
ALTER TABLE admin_svg.style OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.style ADD CONSTRAINT pk_styl PRIMARY KEY (idstyle);
ALTER INDEX admin_svg.pk_styl OWNER TO "+pg_utilis+";
ALTER TABLE ONLYadmin_svg. style ADD CONSTRAINT fk_appthe FOREIGN KEY (idtheme) REFERENCES theme(idtheme);
ALTER TABLE ONLY admin_svg.style ADD CONSTRAINT fk_util FOREIGN KEY (idutilisateur) REFERENCES utilisateur(idutilisateur);
	
CREATE TABLE admin_svg.theme (
	idtheme character varying DEFAULT nextval('admin_svg.them'::text) NOT NULL,
	libelle_them character varying,
	schema character varying,
	tabl character varying,
	raster character varying,
	partiel character varying,
	vu_initial character varying,
	couch_tjs_visible character varying,
	zoommin integer,
	zoommax integer,
	zoommax_raster character varying,
	vu_anonyme boolean DEFAULT false);
ALTER TABLE admin_svg.theme OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.theme ADD CONSTRAINT pk_theme PRIMARY KEY (idtheme);
ALTER INDEX admin_svg.pk_theme OWNER TO "+pg_utilis+";
	
CREATE TABLE admin_svg.utilisateur (
	idutilisateur character varying(10) NOT NULL,
	idcommune character varying(6),
	login character varying(25),
	psw character varying(10),
	droit character varying(2));
ALTER TABLE admin_svg.utilisateur OWNER TO "+pg_utilis+";
ALTER TABLE ONLY admin_svg.utilisateur ADD CONSTRAINT pk_util PRIMARY KEY (idutilisateur);
ALTER INDEX admin_svg.pk_util OWNER TO "+pg_utilis+";

	//cr�r utilisateur super-admin
insert into admin_svg.utilisateur values('1','770000','sig1','admin','AD');
	
CREATE TABLE admin_svg.temp_cotation (
    session_temp character varying,
    the_geom public.geometry,
    valeur character varying,
    "type" character varying
);


ALTER TABLE admin_svg.temp_cotation OWNER TO "+pg_utilis+";

CREATE TABLE admin_svg.incident (
    num integer NOT NULL,
    date_entrer character varying,
    email character varying,
    incident character varying,
    correction character varying,
    date_correction character varying
);


ALTER TABLE admin_svg.incident OWNER TO "+pg_utilis+";

CREATE SEQUENCE admin_svg.incident_num_seq
    INCREMENT BY 1
    NO MAXVALUE
    NO MINVALUE
    CACHE 1;

ALTER TABLE admin_svg.incident_num_seq OWNER TO "+pg_utilis+";
ALTER SEQUENCE admin_svg.incident_num_seq OWNED BY incident.num;


create function admin_svg.v_fixe(character varying) returns character varying language plpsql as $_$declare 
id alias for $1;
chaine character varying:='1';
begin
  if (id ='') then 
	chaine = '0';
  end if;
end;$_$;

create function admin_svg.v_fixe(character varying,character varying) returns character varying language plpsql as $_$declare 
cola alias for $1; 
cole alias for $2; 
col  character varying ;	
begin
   col=cola;
   if (cola is NULL) then
	col = cole;
   end if;
   return col;
end;$_$;

CREATE FUNCTION public.rd2dg(double precision) RETURNS double precision
    AS $_$declare
rd alias for $1;
dg double precision;
begin
dg=(180/3.14)*rd;
return dg;
end;$_$
    LANGUAGE plpgsql;

ALTER FUNCTION public.rd2dg(double precision) OWNER TO "+pg_utilis+";

CREATE FUNCTION public.sinul(character varying, character varying) RETURNS character varying
    AS $_$declare
cola alias for $1;
cole alias for $2;
col  character varying ;

begin
col=cola;
if (cola is NULL) then
     col = cole;
end if;

return col;
end;$_$
    LANGUAGE plpgsql;

ALTER FUNCTION public.sinul(character varying, character varying) OWNER TO "+pg_utilis+";


CREATE FUNCTION public.sivide(character varying, character varying) RETURNS character varying
    AS $_$declare
cola alias for $1;
cole alias for $2;
col  character varying ;

begin
col=cola;
if (cola='') then
     col = cole;
end if;

return col;
end;$_$
    LANGUAGE plpgsql;

ALTER FUNCTION public.sivide(character varying, character varying) OWNER TO "+pg_utilis+";


CREATE FUNCTION public.supp_chr_spec(character varying) RETURNS character varying
    AS $_$declare
ch1 alias for $1;
ch2 character varying;

begin
ch2=replace(ch1,' ','_');
ch2=replace(ch2,'�,'e');
ch2=replace(ch2,'�,'e');
ch2=replace(ch2,'�,'e');
ch2=replace(ch2,'�,'o');
ch2=replace(ch2,'�,'o');
ch2=replace(ch2,'�,'e');
ch2=replace(ch2,'�,'i');
ch2=replace(ch2,'�,'a');
ch2=replace(ch2,'�,'a');
ch2=replace(ch2,'�,'a');
ch2=replace(ch2,'','u');
ch2=replace(ch2,'�,'i');
ch2=replace(ch2,'�,'c');
ch2=replace(ch2,'','u');
return ch2;
end;
$_$
    LANGUAGE plpgsql;

ALTER FUNCTION public.supp_chr_spec(character varying) OWNER TO "+pg_utilis+";


CREATE FUNCTION public.xy2geom(text, text, text, text, text) RETURNS text
    AS $_$declare
schema_name alias for $1;
table_name alias for $2;
new_col alias for $3;
column1_name alias for $4;
column2_name alias for $5;

begin

execute 'select public.AddGeometryColumn('''||schema_name||''','''||table_name||''','''||new_col||''',-1,''POINT'',2)';

execute 'update '||schema_name||'.'||table_name||' set '||new_col||'=geomfromtext(''POINT(''||'||column1_name||'||'' ''||'||column2_name||'||'')'',-1) where oid=oid';
return 'good';
end;
$_$
    LANGUAGE plpgsql;

ALTER FUNCTION public.xy2geom(text, text, text, text, text) OWNER TO "+pg_utilis+";


CREATE TABLE general.testmenu (
    id integer DEFAULT nextval(('general.seq_menu'::text)::regclass) NOT NULL,
    id_pere integer,
    libelle character varying NOT NULL,
    page character varying,
    entete character varying(50),
    code_insee character varying
);

ALTER TABLE general.testmenu OWNER TO "+pg_utilis+";

INSERT INTO testmenu VALUES (1, NULL, 'Urbanisme', NULL, NULL, NULL);
INSERT INTO testmenu VALUES (4, 1, 'Réglement PLU', NULL, NULL, NULL);
INSERT INTO testmenu VALUES (2, 1, 'Note de renseignement', 'ru/ru.php', NULL, NULL);
INSERT INTO testmenu VALUES (3, 1, 'Cartographie', 'interface/carto.php', NULL, NULL);
INSERT INTO testmenu VALUES (7, 4, 'Zone AUE', 'ru/AUE.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (8, 4, 'Zone AUB', 'ru/AUB.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (9, 4, 'Zone AUC', 'ru/AUC.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (10, 4, 'Zone AUD', 'ru/AUD.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (11, 4, 'Zone AUX', 'ru/AUX1.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (12, 4, 'Zone N', 'ru/N.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (13, 4, 'Zone UA', 'ru/UA.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (14, 4, 'Zone UB', 'ru/UB.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (15, 4, 'Zone UC', 'ru/UC.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (16, 4, 'Zone UL', 'ru/UL.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (17, 4, 'Zone UV', 'ru/UV.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (18, 4, 'Zone UX', 'ru/UX.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (19, 4, 'Zone UZ', 'ru/UZ.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (20, 4, 'Réglement complet', 'ru/REGLEMENT.pdf', NULL, NULL);
INSERT INTO testmenu VALUES (21, 1, 'Formulaire CERFA', 'ru/formulaire.htm', NULL, NULL);
INSERT INTO testmenu VALUES (5, 1, 'Plan de Prévention des Risques Naturels', NULL, NULL, NULL);
INSERT INTO testmenu VALUES (24, 5, 'Arrêté et Attestation', 'http://www.seine-et-marne.equipement.gouv.fr/IMG/pdf/Arrete_Meaux_cle7b9437.pdf', '', '770284');
INSERT INTO testmenu VALUES (25, 5, 'Plan', 'http://www.seine-et-marne.equipement.gouv.fr/IMG/pdf/Meaux_cle2f47e7-1.pdf', '', '770284');

CREATE UNIQUE INDEX "testmenu.ndx" ON general.testmenu USING btree (id);


